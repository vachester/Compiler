Program -> Type main ( ) Block #
Type -> int #
Type -> bool #
Block -> { Stmts return Num ; } #
Decl -> Type Array ; #
Stmts -> Stmts M Stmt #
Stmts -> Stmt #
Array -> Identifier [ Num ] #
Array -> Identifier [ Identifier ] #
Array -> Identifier #
Bool_value -> true #
Bool_value -> false #
Assignment -> LArray = Bool #
Assignment -> LArray Self_op #
Assignment -> Self_op LArray #
Bool -> Bool LLogic_op M HRel #
Bool -> HRel #
HRel -> HRel HLogic_op M Rel #
HRel -> Rel #
Rel -> Rel Judge_op LExpr #
Rel -> LExpr #
LExpr -> LExpr LMath_op HExpr #
LExpr -> HExpr #
HExpr -> HExpr HMath_op Factor #
HExpr -> Factor #
Factor -> ! ( Bool ) #
Factor -> ( Bool ) #
Factor -> Array #
Factor -> Num #
Factor -> Bool_value #
Self_op -> ++ #
Self_op -> -- #
LLogic_op -> || #
HLogic_op -> && #
LMath_op -> + #
LMath_op -> - #
HMath_op -> * #
HMath_op -> / #
HMath_op -> % #
Judge_op -> == #
Judge_op -> != #
Judge_op -> >= #
Judge_op -> <= #
Judge_op -> > #
Judge_op -> < #
Stmt -> Decl #
Stmt -> if ( Bool ) M Stmt #
Stmt  -> if ( Bool ) M Stmt N else M Stmt #
Stmt -> Assignment ; #
Stmt -> while M ( Bool ) M Stmt #
Stmt -> for ( Fora ; M Forb ; Forc ) M Stmt #
Forc -> ForAssignment #
Forc -> ε #
Forb -> Bool #
Forb -> ε #
Stmt -> { Stmts } #
LArray -> Identifier [ Num ] #
LArray -> Identifier [ Identifier ] #
LArray -> Identifier #
M -> ε # 
N -> ε # 
ForAssignment -> LArray = Bool #
ForAssignment -> LArray Self_op #
ForAssignment -> Self_op LArray #
Fora -> Assignment #
Fora -> ε #
